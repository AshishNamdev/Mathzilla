# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

include config

FONT_FILE_LIST = font-file-list
MATHML_CSS = mathml.css
MATHML_FONTS = MathML-fonts
MATHML_FONTS_XPI = mathml-fonts.xpi
MATHML_FONTS_ZIP = mathml-fonts.zip
RESOURCE = resource
RESOURCE_WOFF_FONTS_URI = MathML-fonts/

all: download woff css xpi

clean:
	@ echo "Removing temporary files..."
	@ rm -f $(MATHML_FONTS_ZIP)
	@ rm -f $(FONT_FILE_LIST)*
	@ rm -rf $(MATHML_FONTS)/$(RESOURCE)

download:
	@ echo "Downloading MathML fonts..."
	@ $(WGET) $(MATHML_FONTS_URI) -O $(MATHML_FONTS_ZIP)

woff:
	@ mkdir -p $(MATHML_FONTS)/$(RESOURCE)

	@ echo "Extracting MathML fonts..."
	@ $(UNZIP) -o $(MATHML_FONTS_ZIP) -d $(MATHML_FONTS)/$(RESOURCE)

	@ echo "Converting otf fonts to woff..."
	@ cd $(MATHML_FONTS)/$(RESOURCE)/$(MATHML_FONTS)/ ; \
	  for FONTDIR in `ls`; do \
	    cd $$FONTDIR; \
	    for FONTFILE in `ls *.otf`; do \
	      $(SFNT2WOFF) $$FONTFILE; \
	      rm $$FONTFILE;  \
	    done; \
	    cd ..; \
	  done;

css:
	@ echo "Adding @font-face rules in mathml.css..."

	@ # first enumerate all the font files in 
	@ cat /dev/null > $(FONT_FILE_LIST)
	@ cd $(MATHML_FONTS)/$(RESOURCE)/$(MATHML_FONTS); \
	  for FONTDIR in `ls`; do \
	    cd $$FONTDIR; \
	    for FONTFILE in `ls *.woff`; do \
	      echo $$FONTDIR/$$FONTFILE >> ../../../../$(FONT_FILE_LIST); \
	    done; \
	    cd ..; \
	  done;

	@ # now extract those that are None/Regular/Bold/Italic|BoldItalic
	@ $(EGREP) -v -e "Regular|Bold|Italic|BoldItalic" $(FONT_FILE_LIST) > $(FONT_FILE_LIST)-None
	@ for STYLE in Regular Bold Italic BoldItalic; do \
	    $(EGREP) -e "-$$STYLE\.woff" $(FONT_FILE_LIST) > $(FONT_FILE_LIST)-$$STYLE; \
	  done;

	@ # Finally write font-face rules
	@ # Replace hyphen by a space in font family
	@ writeFontFaceRule() { \
	    local FONTFAMILY="`echo $$1 | $(SED) 's|\-|\ |g'`" ; \
	    local LOCALNAME1="`echo $$2 | $(SED) 's|.*/\(.*\)\.woff|\1|' `"; \
            local LOCALNAME2="`echo $$LOCALNAME1 | $(SED) 's|\-|\ |g'`"; \
	    echo "@font-face {" >> $(MATHML_CSS); \
            echo "  font-family: '$$FONTFAMILY';" >> $(MATHML_CSS); \
            echo "  src: local('$$LOCALNAME1'), local('$$LOCALNAME2'), url('$(RESOURCE_WOFF_FONTS_URI)$$2');" >> $(MATHML_CSS); \
            echo "  font-weight: $$3;" >> $(MATHML_CSS); \
            echo "  font-style: $$4;" >> $(MATHML_CSS); \
            echo "}" >> $(MATHML_CSS); \
	  }; \
	  cd $(MATHML_FONTS)/$(RESOURCE)/; \
	  echo "/* This file is automatically generated. Do not edit. */" > $(MATHML_CSS); \
          for FONTFILE in `cat ../../$(FONT_FILE_LIST)-None`; do \
	    FONTFAMILY=`echo $$FONTFILE | $(SED) "s|.*/\(.*\)\.woff|\1|"` ; \
	    writeFontFaceRule $$FONTFAMILY $$FONTFILE "normal" "normal"; \
	  done; \
          for FONTFILE in `cat ../../$(FONT_FILE_LIST)-Regular`; do \
	    FONTFAMILY=`echo $$FONTFILE | $(SED) "s|.*/\(.*\)\-Regular\.woff|\1|"` ; \
	    writeFontFaceRule $$FONTFAMILY $$FONTFILE "normal" "normal"; \
	  done; \
          for FONTFILE in `cat ../../$(FONT_FILE_LIST)-Bold`; do \
	    FONTFAMILY=`echo $$FONTFILE | $(SED) "s|.*/\(.*\)\-Bold\.woff|\1|"` ; \
	    writeFontFaceRule $$FONTFAMILY $$FONTFILE "bold" "normal"; \
	  done; \
          for FONTFILE in `cat ../../$(FONT_FILE_LIST)-Italic`; do \
	    FONTFAMILY=`echo $$FONTFILE | $(SED) "s|.*/\(.*\)\-Italic\.woff|\1|"` ; \
	    writeFontFaceRule $$FONTFAMILY $$FONTFILE "normal" "italic"; \
	  done; \
          for FONTFILE in `cat ../../$(FONT_FILE_LIST)-BoldItalic`; do \
	    FONTFAMILY=`echo $$FONTFILE | $(SED) "s|.*/\(.*\)\-BoldItalic\.woff|\1|"` ; \
	    writeFontFaceRule $$FONTFAMILY $$FONTFILE "bold" "italic"; \
	  done; \

xpi:
	@ echo "Creating the xpi file..."
	@ cd $(MATHML_FONTS) ; $(ZIP) -r ../$(MATHML_FONTS_XPI) *

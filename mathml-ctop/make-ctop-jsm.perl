#!/usr/bin/perl
# -*- Mode: Perl; tab-width: 2; indent-tabs-mode: nil; -*-
# vim: set shiftwidth=4 tabstop=8 autoindent expandtab:
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

if (($#ARGV + 1) != 1) {
    die ("usage: make-ctop.jsm.perl ctop.xsl\n");
}

print "/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode:nil; -*- */
/* vim: set ts=2 et sw=2 tw=80: */
/* This file is automatically generated from ctop.xsl. Do not edit. */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

var EXPORTED_SYMBOLS = ['CtopXSLT'];

var parser = Components.classes['\@mozilla.org/xmlextras/domparser;1']
             .createInstance(Components.interfaces.nsIDOMParser);
var CtopXSLT = parser.parseFromString('<x:stylesheet version=\"1.0\" xmlns:x=\"http://www.w3.org/1999/XSL/Transform\" xmlns=\"http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://www.w3.org/1998/Math/MathML\" xmlns:e=\"http://exslt.org/strings\"  xmlns:c=\"http://exslt.org/common\" exclude-result-prefixes=\"m e c\"> ";

open (CTP, $ARGV[0]) || die ("ctop  not readable!!\n") ;

$ss="";

while($line = <CTP>) {
$line =~ s/ *[\r\n]+/ /;
$line =~ s/<!--[^-]*-->//;
$line =~ s/> */>/g;
$line =~ s/ *</</g;
$line =~ s/xsl:/x:/g;
$line =~ s/<m:/</g;
$line =~ s/<\/m:/<\//g;
$line =~ s/ *mode="c2p"//g;
$line =~ s/'/\\'/g;

$ss .= $line unless ($line =~ /<\/x:stylesheet>/);

}

$ss =~ s/[^>]*>//;

print $ss;

print "</x:stylesheet>', \"text/xml\");"
